@using Umbraco.Cms.Core.Models.Blocks
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.HandbookHomePage>

@{
    Layout = "~/Views/Shared/HandbookSite.cshtml";
    var categories = Model.Value<IEnumerable<IPublishedContent>>("categoriesToDisplay");
    var selectedState = Context.Request.Query["state"].ToString()?.ToUpperInvariant() ?? "UNIVERSAL";
}

<div class="header-titles">
    <h1>Employee Handbook</h1>
    <p>Welcome to the Employee Handbook. These policies reflect our values and legal responsibilities. You can explore policies by category or select your state to see relevant legal overlays.</p>
</div>

<main class="handbook-main">
    <div class="policy-searchbar">
        <span class="search-icon">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35M17 10a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
        </span>
        <input type="text" placeholder="Search policies…" aria-label="Search policies" />
    </div>

    <section class="category-grid">
        @if (categories != null && categories.Any())
        {
            foreach (var category in categories)
            {
                <a class="category-card" href="@category.Url()?state=@selectedState">
                    <h2>@category.Value("categoryTitle")</h2>
                    <p>@category.Value("categoryDescription")</p>
                </a>
            }
        }
        else
        {
            <p class="text-center mt-2">No categories have been selected yet.</p>
        }
    </section>
</main>
